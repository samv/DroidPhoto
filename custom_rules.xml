<?xml version="1.0" encoding="UTF-8"?>
<project name="DroidPhoto">
  <property name="ext.asynchttp.rel.dir"
            location="ext/android-async-http/releases" />
  <property name="ext.asynchttp.rel.version" value="1.4.3" />
  <property name="ext.siv.proj.dir"
            location="ext/android-smart-image-view" />
  <property name="ext.siv.rel.version" value="1.0.0" />
  <property name="ext.uil.rel.dir"
            location="ext/android-universal-image-loader/downloads" />
  <property name="ext.uil.rel.version" value="1.9.2" />
  <property name="ext.commons.io.build.dir"
            location="ext/commons-io/target" />
  <property name="ext.commons.io.version" value="2.4" />
  <property name="ext.commons.lang.build.dir"
            location="ext/commons-lang/target" />
  <property name="ext.commons.lang.version" value="3.3" />
  <property name="ext.scribe.build.dir"
            location="ext/scribe-java/target" />
  <property name="ext.scribe.version" value="1.3.7" />

  <property name="ext.jackson.version" value="2.4.0" />
  <property name="ext.jackson.core.build.dir"
            location="ext/jackson-core/target" />
  <property name="ext.jackson.databind.build.dir"
            location="ext/jackson-databind/target" />

  <target name="-pre-compile">
    <!--
     <copy file="${ext.asynchttp.rel.dir}/android-async-http-${ext.asynchttp.rel.version}.jar"
           todir="libs/"/>
     -->
     <copy file="${ext.uil.rel.dir}/universal-image-loader-${ext.uil.rel.version}.jar"
           todir="libs/"/>
     <copy file="${ext.siv.proj.dir}/android-smart-image-view-${ext.siv.rel.version}.jar"
           todir="libs/"/>
     <copy file="${ext.commons.io.build.dir}/commons-io-${ext.commons.io.version}.jar"
           todir="libs/"/>
     <copy file="${ext.commons.lang.build.dir}/commons-lang3-${ext.commons.lang.version}.jar"
           todir="libs/"/>
     <copy file="${ext.scribe.build.dir}/scribe-${ext.scribe.version}.jar"
           todir="libs/"/>
     <copy file="${ext.jackson.core.build.dir}/jackson-core-${ext.jackson.version}-sources.jar"
           todir="libs/"/>
     <copy file="${ext.jackson.databind.build.dir}/jackson-databind-${ext.jackson.version}-sources.jar"
           todir="libs/"/>
  </target>

  <!-- tests -->
  <property name="testsuite.source.dir" location="tests" />
  <property name="testsuite.out.dir" location="logs" />
  <property name="testsuite.junit.jar" location="/usr/share/java/junit4.jar" />
  <property name="ext.jsonorg.build.dir"
            location="ext/org.json-java/target" />
  <property name="ext.jsonorg.version" value="20131017" />
  <property name="ext.jsonassert.build.dir"
            location="ext/JSONassert/target" />
  <property name="ext.jsonassert.version" value="1.2.3" />

  <!-- Compile the test suite -->
  <target name="-compile-tests" depends="debug">
     <path id="project.javac.classpath">
      <path refid="project.all.jars.path" />
      <path refid="tested.project.classpath" />
      <pathelement path="${testsuite.junit.jar}" />
    </path>

     <copy file="${ext.jsonassert.build.dir}/jsonassert-${ext.jsonassert.version}.jar"
           todir="libs/"/>
<!--
     <copy file="${ext.jsonorg.build.dir}/org.json-${ext.jsonorg.version}.jar"
           todir="libs/"/> -->

    <javac encoding="${java.encoding}"
	   source="${java.source}" target="${java.target}"
	   debug="true" extdirs="" includeantruntime="false"
	   destdir="${out.classes.absolute.dir}"
	   verbose="${verbose}"
	   classpathref="project.javac.classpath"
	   fork="${need.javac.fork}">
      <src path="${testsuite.source.dir}" />
    </javac>
  </target>

  <!-- Run the test suite -->
  <target name="run-tests" depends="-compile-tests">
    <mkdir dir="${testsuite.out.dir}" />
    <path id="project.java.classpath">
      <path refid="project.all.jars.path" />
      <path refid="tested.project.classpath" />
      <pathelement path="${testsuite.junit.jar}" />
      <pathelement path="${out.classes.absolute.dir}" />
    </path>

    <junit printsummary="yes" failureproperty="tests.failed">
      <formatter type="brief" />
      <classpath refid="project.java.classpath" />

      <batchtest fork="yes" todir="${testsuite.out.dir}">
	<fileset dir="${testsuite.source.dir}" />
      </batchtest>
    </junit>
  </target>
</project>
